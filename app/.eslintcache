[{"/home/f/codes/bcs/farmer/app/src/index.js":"1","/home/f/codes/bcs/farmer/app/src/App.js":"2","/home/f/codes/bcs/farmer/app/src/balances.js":"3","/home/f/codes/bcs/farmer/app/src/block.js":"4","/home/f/codes/bcs/farmer/app/src/baseComponet.js":"5"},{"size":221,"mtime":1606717672688,"results":"6","hashOfConfig":"7"},{"size":1024,"mtime":1606704417451,"results":"8","hashOfConfig":"7"},{"size":15684,"mtime":1607589400789,"results":"9","hashOfConfig":"7"},{"size":1161,"mtime":1607392440572,"results":"10","hashOfConfig":"7"},{"size":6624,"mtime":1607589288925,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y35711",{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/f/codes/bcs/farmer/app/src/index.js",[],"/home/f/codes/bcs/farmer/app/src/App.js",["23","24","25","26"],"import './App.css';\nimport { Component } from 'react';\nimport Block from './block';\nimport Web3 from \"web3\";\n\nimport {SiderDemo, ProcessStatus, TreeList, ShowTree, TransactTrc} from './balances'\n\nclass App extends Component {\n\n  componentWillMount() {\n    if (window.ethereum) {\n      // use MetaMask's provider\n      Block.web3 = new Web3(window.ethereum);\n      window.ethereum.enable(); // get permission to access accounts\n    } else {\n      console.warn(\n        \"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live\",\n      );\n      // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n      Block.web3 = new Web3(\n        new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\"),\n        // new Web3.providers.HttpProvider(\"http://192.168.8.208:8545\"),\n      );\n    }\n    Block.start();\n    console.log('enter App componentWillMount');\n  }\n\n  render() {\n      return (\n        <SiderDemo />)\n  }\n\n}\n\nexport default App;\n","/home/f/codes/bcs/farmer/app/src/balances.js",["27","28","29","30"],"/home/f/codes/bcs/farmer/app/src/block.js",[],"/home/f/codes/bcs/farmer/app/src/baseComponet.js",["31","32"],{"ruleId":"33","severity":1,"message":"34","line":6,"column":20,"nodeType":"35","messageId":"36","endLine":6,"endColumn":33},{"ruleId":"33","severity":1,"message":"37","line":6,"column":35,"nodeType":"35","messageId":"36","endLine":6,"endColumn":43},{"ruleId":"33","severity":1,"message":"38","line":6,"column":45,"nodeType":"35","messageId":"36","endLine":6,"endColumn":53},{"ruleId":"33","severity":1,"message":"39","line":6,"column":55,"nodeType":"35","messageId":"36","endLine":6,"endColumn":66},{"ruleId":"40","severity":1,"message":"41","line":238,"column":26,"nodeType":"42","endLine":238,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":299,"column":26,"nodeType":"45","messageId":"46","endLine":299,"endColumn":28},{"ruleId":"47","severity":1,"message":"48","line":370,"column":44,"nodeType":"49","messageId":"50","endLine":370,"endColumn":46},{"ruleId":"47","severity":1,"message":"48","line":370,"column":57,"nodeType":"49","messageId":"50","endLine":370,"endColumn":59},{"ruleId":"33","severity":1,"message":"51","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":27},{"ruleId":"43","severity":1,"message":"52","line":141,"column":29,"nodeType":"45","messageId":"46","endLine":141,"endColumn":31},"no-unused-vars","'ProcessStatus' is defined but never used.","Identifier","unusedVar","'TreeList' is defined but never used.","'ShowTree' is defined but never used.","'TransactTrc' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'ArrowsAltOutlined' is defined but never used.","Expected '===' and instead saw '=='."]  async recordAddr(number, addr) {\n      await this.connect();\n      const {addAddr} = Block.auction.methods;\n      var isSucceess = await addAddr(number, addr).send({from:Block.account});\n      console.log(\"record addr\", isSucceess);\n    }\n\n    async vote(isWithdraw) {\n      await this.connect();\n      let number = this.state.number;\n      let value = this.state.price;\n      const {payForWithdraw} = Block.auction.methods;\n      var res = await payForWithdraw(number, isWithdraw).send({from:Block.account, value:value})\n      console.log(\"vote\", res)\n    }\n\n    async getVote() {\n      await this.connect();\n      let t = Math.ceil(new Date().valueOf() / 1000);\n      const {getProcess} = Block.auction.methods;\n      let res = Number(await getProcess(t).call());\n      this.setState({status:res})\n      console.log(\"getVote process\", t, res);\n      if (res === 3) {\n        const {getBidHighInfo} = Block.auction.methods;\n        res = await getBidHighInfo().call({from:Block.account});\n        this.setState({price: res[0], number:parseInt(res[1]), host:res[2], account:res[3]})\n        console.log(\"getBidHighInfo res\", res);\n        if (res[1] !== '0') {\n          let number = Number(res[1])\n          const {getPayInfo} = Block.auction.methods;\n          res = await getPayInfo(number).call({from:Block.account})\n          console.log(\"getPayInfo\", res);\n          this.setState({isVote:res})\n        } else {\n            this.setState({isVote:3}) //没有竞拍\n        }\n      } else {\n        this.setState({isVote:2}) //非申诉期\n      }\n    }\n\n\n    async getAmount() {\n      await this.connect();\n\n      // let t = Math.ceil(new Date().valueOf() / 1000);\n      // const {getProcess} = Block.auction.methods;\n      // let res = Number(await getProcess(t).call());\n      // if (res !== 4) {\n      //   this.setState({amount:0})\n      // } else {\n      //   console.log(\"getAmount\", res);\n      //   const {queryAmount} = Block.auction.methods;\n      //   res = await queryAmount().call({from:Block.account});\n      //   this.setState({amount:res});\n      // }\n      const {isGetMoney} = Block.auction.methods;\n      var isReturn = await isGetMoney().call({from:Block.account});\n      this.setState({isGetMoney:isReturn});\n      const {queryAmount} = Block.auction.methods;\n      let res = await queryAmount().call({from:Block.account});\n      this.setState({amount:(res/10**18)});\n\n    }\n\n\n    async getBidAmount() {\n      await this.connect()\n      const {isGetMoney} = Block.auction.methods;\n      var isReturn = await isGetMoney().call({from:Block.account});\n      if (isReturn) {\n        message.warning(\"您已经提取过收益\");\n        return ;\n      }\n      if (this.state.amount == 0) {\n        message.info(\"您没有返利可以提取\")\n        return ;\n      }\n      const {getAmount} = Block.auction.methods;\n      await getAmount().send({from:Block.account})\n      message.info(\"提取完成！\");\n    }\n\n\n\n    async refreshStatus() {\n      await this.connect();\n      const {getStatus} = Block.meta.methods;\n      var balanceList = await getStatus().call();\n      console.log('refreshStatus: '+ balanceList)\n      var newBalanceList = balanceList.map(function(item, index) {return {key:index+1, value:item}});\n      this.setState({balanceList:newBalanceList})\n    }\n  \n  \n    async refreshBalance() {\n      await this.connect()\n      const {balanceOf} = Block.meta.methods;\n      const balance = await balanceOf(Block.account).call();\n      this.setState({balance: balance});\n      if (balance !== \"0\") {\n        const { getBalance } = Block.meta.methods;\n        const balanceList = await getBalance(Block.account).call();\n        console.log(balanceList);\n        var balanceListShow = balanceList.filter(item => item!==\"0\");\n        this.setState({balanceList:balanceListShow});\n      }\n    }\n  \n    async transfer(receiver, amount) {\n      await this.connect();\n      this.setState({status:\"Initiating transaction... (please wait)\"})\n      message.info(this.state.status);\n      const { transfer } = Block.meta.methods;\n      const success = await transfer(receiver, amount).call({ from: Block.account });\n      console.log(success);\n      this.setState({status:\"Transaction complete!\"});\n      message.info(this.state.status);\n    }\n  \n    async buy(number) {\n      await this.connect();\n      console.log(number);\n      const {buyTrc} = Block.meta.methods;\n      const success = await buyTrc(number).send({from: Block.account, value:10**17});\n      console.log(\"buy\", success);\n    }\n  \n  }\n\n  export default BaseComponent;",{"ruleId":"34","severity":1,"message":"35","line":6,"column":20,"nodeType":"36","messageId":"37","endLine":6,"endColumn":33},{"ruleId":"34","severity":1,"message":"38","line":6,"column":35,"nodeType":"36","messageId":"37","endLine":6,"endColumn":43},{"ruleId":"34","severity":1,"message":"39","line":6,"column":45,"nodeType":"36","messageId":"37","endLine":6,"endColumn":53},{"ruleId":"34","severity":1,"message":"40","line":6,"column":55,"nodeType":"36","messageId":"37","endLine":6,"endColumn":66},{"ruleId":"41","severity":1,"message":"42","line":238,"column":26,"nodeType":"43","endLine":238,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":299,"column":26,"nodeType":"46","messageId":"47","endLine":299,"endColumn":28},{"ruleId":"48","severity":1,"message":"49","line":370,"column":44,"nodeType":"50","messageId":"51","endLine":370,"endColumn":46},{"ruleId":"48","severity":1,"message":"49","line":370,"column":57,"nodeType":"50","messageId":"51","endLine":370,"endColumn":59},{"ruleId":"34","severity":1,"message":"52","line":4,"column":10,"nodeType":"36","messageId":"37","endLine":4,"endColumn":27},{"ruleId":"44","severity":1,"message":"53","line":141,"column":29,"nodeType":"46","messageId":"47","endLine":141,"endColumn":31},"no-unused-vars","'ProcessStatus' is defined but never used.","Identifier","unusedVar","'TreeList' is defined but never used.","'ShowTree' is defined but never used.","'TransactTrc' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'ArrowsAltOutlined' is defined but never used.","Expected '===' and instead saw '=='."]